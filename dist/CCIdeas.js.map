{"version":3,"sources":["webpack://ccreddit-mod/./src/config/index.ts","webpack://ccreddit-mod/./src/init/checkHook/index.ts","webpack://ccreddit-mod/./src/init/cookiesPerClickHook/index.ts","webpack://ccreddit-mod/./src/init/cpsHook/index.ts","webpack://ccreddit-mod/./src/init/customMods/index.ts","webpack://ccreddit-mod/./src/init/createHook/index.ts","webpack://ccreddit-mod/./src/customFuncs/TieredUpgrades/index.ts","webpack://ccreddit-mod/./src/customFuncs/HeavenlyUpgrades/index.ts","webpack://ccreddit-mod/./src/main.ts","webpack://ccreddit-mod/./src/init/index.ts","webpack://ccreddit-mod/./src/save/index.ts","webpack://ccreddit-mod/./src/load/index.ts"],"names":["modName","upgradeIconsUrl","tierRows","aura","luminous","misfortune","tierDescs","default","buildingsList","cursor","grandma","farm","mine","factory","bank","temple","wizardTower","shipment","alchemyLab","portal","timeMachine","antimatterCondenser","prism","chancemaker","fractalEngine","javascriptConsole","idleverse","checkHookContent","Game","ObjectsById","filter","building","vanilla","map","Has","level","Unlock","tieredUpgrades","name","console","log","cookiesPerClick","cpc","elderWrath","cookiesPs","originalCps","cps","misfortunePrice","tier","quote","buildings","priceFunc","upgrade","Math","min","basePrice","unbuffedCps","order","description","price","icon","kitten","forEach","upgradeData","desc","indexOf","Objects","Tiers","Upgrade","mod","floor","SetTier","upgrades","push","data","pool","parents","parent","Upgrades","posX","posY","position","PrestigeUpgrades","HeavenlyUpgrades","CCIdeas","init","tickerAddons","modifyBuildingPriceAddons","upgradeGetPriceAddons","getTieredCpsMultAddons","offlineCpsAddons","kittenUpgradeAddons","link","document","createElement","type","rel","href","getElementsByTagName","appendChild","baseTierPrice","Object","keys","length","tierCount","addTierCount","auraTier","color","iconRow","special","unlock","luminousTier","misfortuneTier","assign","getNewTicker","Function","toString","split","join","modifyBuildingPrice","prototype","getPrice","GetTieredCpsMult","LoadSave","CalculateGains","customMods","registerHook","cookiesPerClickHookContent","cpsHookContent","createHook","save","saveObj","boughtUpgrades","unlockedUpgrades","UpgradesById","bought","unlocked","JSON","stringify","load","saveString","parse","registerMod"],"mappings":"mBAAO,MAAMA,EAAU,0BAEVC,EAAkB,6DAClBC,EAAW,CACvBC,KAAM,EACNC,SAAU,EACVC,WAAY,GAGAC,EAAY,CACxBC,QAAS,mCACTF,WAAY,mGAKAG,EAAgB,CAC5B,SACA,UACA,OACA,OACA,UACA,OACA,SACA,eACA,WACA,cACA,SACA,eACA,uBACA,QACA,cACA,iBACA,qBACA,cAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACGlB,EChCEmB,EAAmB,IAtBAC,KAAKC,YAAYC,QAAOC,GAAiC,IAArBA,EAASC,UAAeC,KAAIF,GAChF,KACFH,KAAKM,IAAI,gBAAkBH,EAASI,OAAS,GAChDP,KAAKQ,OAAOL,EAASM,eAAelC,KAAKmC,YAQpBV,KAAKC,YAAYC,QAAOC,GAAiC,IAArBA,EAASC,UAAeC,KAAIF,GAChF,KACFH,KAAKM,IAAI,oBAAsBH,EAASI,OAAS,IACpDP,KAAKQ,OAAOL,EAASM,eAAejC,SAASkC,UASjDC,QAAQC,IAAIb,GAEZ,UChBA,EAVoCc,IACnC,IAAIC,EAAMD,EAMV,OAJwB,IAApBb,KAAKe,YAAoBf,KAAKM,IAAI,qBACrCQ,GAAwB,IAAjBd,KAAKgB,WAGNF,GCQR,EAfwBG,IACvB,IAAIC,EAAMD,EAWV,OATwB,IAApBjB,KAAKe,aACJf,KAAKM,IAAI,qBACZY,GAAO,MAEJlB,KAAKM,IAAI,qBACZY,GAAO,OAIFA,GCZFC,EAAkB,oBCIlB5C,EAAO,KACZ,MAAM6C,EAAO,OAkHb,MAhH4C,CAC3C,CACCV,KAAM,eACNW,MACC,6HACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,aACNW,MACC,yIACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,eACNW,MAAO,6FACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,YACNW,MACC,uKACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,YACNW,MACC,yIACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,sBACNW,MACC,8JACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,cACNW,MAAO,8FACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,YACNW,MAAO,8GACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,qBACNW,MACC,+GACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,cACNW,MAAO,yFACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,cACNW,MAAO,6FACPlB,SAAUmB,EACVF,QAGD,CACCV,KAAM,kBACNP,SAAUmB,EACVF,QAED,CACCV,KAAM,aACNW,MAAO,oEACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,YACNW,MAAO,2GACPlB,SAAUmB,EACVF,QAGD,CACCV,KAAM,gBACNP,SAAUmB,EACVF,QAED,CACCV,KAAM,gBACNW,MAAO,gGACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,gBACNW,MACC,2KACDlB,SAAUmB,EACVF,UAOG5C,EAAW,KAChB,MAAM4C,EAAO,WAoHb,MAlH4C,CAC3C,CACCV,KAAM,oBACNW,MAAO,sFACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,iBACNW,MACC,kMACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,oBACNW,MACC,qIACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,iBACNW,MACC,wLACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,gBACNW,MACC,wLACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,mBACNW,MAAO,0FACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,oBACNW,MACC,8KACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,gBACNW,MACC,oHACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,yBACNW,MAAO,sGACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,kBACNW,MAAO,0GACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,kBACNW,MACC,+JACDlB,SAAUmB,EACVF,QAGD,CACCV,KAAM,sBACNP,SAAUmB,EACVF,QAED,CACCV,KAAM,iBACNW,MACC,0HACDlB,SAAUmB,EACVF,QAED,CACCV,KAAM,gBACNW,MAAO,kGACPlB,SAAUmB,EACVF,QAGD,CACCV,KAAM,oBACNP,SAAUmB,EACVF,QAED,CACCV,KAAM,oBACNW,MAAO,wEACPlB,SAAUmB,EACVF,QAED,CACCV,KAAM,oBACNW,MACC,0IACDlB,SAAUmB,EACVF,UAOG3C,EAAa,KAClB,MAAM2C,EAAO,aACPG,EAAuBC,GACrBC,KAAKC,IAAIF,EAAQG,UAA8B,GAAnB3B,KAAK4B,YAAmB,GAAK,IAE3DC,EAAQ,MA0Md,MAxM4C,CAC3C,CACCnB,KAAM,kBACNW,MAAO,4DACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBACNW,MAAO,kDACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBAENW,MAAO,wBACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBAENW,MAAO,uCACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBACNW,MAAO,uFACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBACNW,MAAO,mDACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBACNW,MAAO,4BACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBACNW,MAAO,sDACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBACNW,MAAO,gDACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBAENW,MAAO,qCACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBAENW,MAAO,+BACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBAENW,MAAO,4BACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBACNW,MAAO,6CACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBACNW,MAAO,oEACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBAENW,MAAO,wCACPlB,SAAUmB,EACVF,OACAS,SAED,CACCnB,KAAM,kBAENW,MAAO,qCACPlB,SAAUmB,EACVF,OACAS,S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","file":"CCIdeas.js","sourcesContent":["export const modName = 'Cookie Clicker OC Ideas';\n\nexport const upgradeIconsUrl = 'https://hyoretsu.github.io/ccideas-mod/static/upgrades.png';\nexport const tierRows = {\n aura: 3,\n luminous: 4,\n misfortune: 0,\n};\n\nexport const tierDescs = {\n default: 's are <b>twice</b> as efficient.',\n misfortune: 's are <b>6%</b> cheaper and <b>6%</b> more efficient during the last stage of Grandmapocalypse.',\n};\n\nexport const endOfOrder = 0.9999;\n\nexport const buildingsList = [\n 'Cursor',\n 'Grandma',\n 'Farm',\n 'Mine',\n 'Factory',\n 'Bank',\n 'Temple',\n 'Wizard tower',\n 'Shipment',\n 'Alchemy lab',\n 'Portal',\n 'Time machine',\n 'Antimatter condenser',\n 'Prism',\n 'Chancemaker',\n 'Fractal engine',\n 'Javascript console',\n 'Idleverse',\n];\nexport const [\n cursor,\n grandma,\n farm,\n mine,\n factory,\n bank,\n temple,\n wizardTower,\n shipment,\n alchemyLab,\n portal,\n timeMachine,\n antimatterCondenser,\n prism,\n chancemaker,\n fractalEngine,\n javascriptConsole,\n idleverse,\n] = buildingsList;\nexport const mouse = 'Mouse';\n","const auraTierChecks = (): (() => void)[] => {\n const checkFuncsArray = Game.ObjectsById.filter(building => building.vanilla === 1).map(building => {\n  return () => {\n   if (Game.Has('Aura gloves') && building.level >= 5) {\n    Game.Unlock(building.tieredUpgrades.aura.name);\n   }\n  };\n });\n\n return checkFuncsArray;\n};\nconst luminousTierChecks = (): (() => void)[] => {\n const checkFuncsArray = Game.ObjectsById.filter(building => building.vanilla === 1).map(building => {\n  return () => {\n   if (Game.Has('Luminous gloves') && building.level >= 10) {\n    Game.Unlock(building.tieredUpgrades.luminous.name);\n   }\n  };\n });\n\n return checkFuncsArray;\n};\n\nconst checkHookContent = [...auraTierChecks(), ...luminousTierChecks()];\nconsole.log(checkHookContent);\n\nexport default checkHookContent;\n","const cookiesPerClickHookContent = (cookiesPerClick: number): number => {\n let cpc = cookiesPerClick;\n\n if (Game.elderWrath === 3 && Game.Has('Misfortune #604')) {\n  cpc += Game.cookiesPs * 0.01;\n }\n\n return cpc;\n};\n\nexport default cookiesPerClickHookContent;\n","const cpsHookContent = (originalCps: number): number => {\n let cps = originalCps;\n\n if (Game.elderWrath === 3) {\n  if (Game.Has('Misfortune #600')) {\n   cps *= 1.01;\n  }\n  if (Game.Has('Misfortune #601')) {\n   cps *= 1.06;\n  }\n }\n\n return cps;\n};\n\nexport default cpsHookContent;\n","const misfortunePrice = 66666666666666666666666666666;\n\nconst customMods = (): void => {\n const tickerAddons: string[] = [];\n const modifyBuildingPriceAddons: string[] = [];\n const upgradeGetPriceAddons: string[] = [];\n const getTieredCpsMultAddons: string[] = [];\n const offlineCpsAddons: string[] = [];\n const kittenUpgradeAddons: string[] = [];\n\n // Insert custom CSS\n const link = document.createElement('link');\n link.type = 'text/css';\n link.rel = 'stylesheet';\n link.href = 'https://hyoretsu.github.io/ccideas-mod/static/styles.css';\n document.getElementsByTagName('head')[0].appendChild(link);\n\n const baseTierPrice = Game.Tiers[Object.keys(Game.Tiers).length - 3].price;\n let tierCount = 10;\n const addTierCount = () => {\n  tierCount *= 10;\n };\n\n const auraTier = {\n  aura: {\n   color: '#ff7e00',\n   iconRow: 3,\n   name: 'Aura',\n   price: baseTierPrice * tierCount,\n   special: 1,\n   unlock: -1,\n   upgrades: [],\n  },\n };\n addTierCount();\n const luminousTier = {\n  luminous: {\n   color: '#ddb466',\n   iconRow: 4,\n   name: 'Luminous',\n   price: baseTierPrice * tierCount,\n   special: 1,\n   unlock: -1,\n   upgrades: [],\n  },\n };\n addTierCount();\n const misfortuneTier = {\n  misfortune: {\n   color: '#7e5a40',\n   iconRow: 0,\n   name: 'Misfortune',\n   price: misfortunePrice,\n   special: 1,\n   unlock: -1,\n   upgrades: [],\n  },\n };\n Object.assign(Game.Tiers, auraTier, luminousTier, misfortuneTier);\n\n tickerAddons.push(\n  // eslint-disable-next-line no-template-curly-in-string\n  'if(!manual&&Game.Has(\"Misfortune cookies\")&&Math.random()<(Game.HasAchiev(\"O Fortuna\")?0.04:0.02)){const misfortunes=[];Game.Tiers.misfortune.upgrades.forEach(upgrade=>{if(!upgrade.unlocked){ misfortunes.push(upgrade);}});if(misfortunes.length>0){list=[];const chosenNews=choose(misfortunes);Game.TickerEffect={type:\"fortune\",sub:chosenNews};console.log(chosenNews);list=[`<span id=\"misfortune\"><div class=\"icon\"></div>${chosenNews.name.split(\" \")[1]} : ${chosenNews.baseDesc.split(\"<q>\")[1].split(\"</q>\")[0]}</span>`,]}}',\n );\n modifyBuildingPriceAddons.push(\n  \"if(Game.elderWrath===3&&Game.Has(building.tieredUpgrades.misfortune.name)){price*=0.94}if(Game.Has('Misfortune #600')){price*=0.99}\",\n );\n upgradeGetPriceAddons.push(\"if(Game.Has('Misfortune #600')){price*=0.99}\");\n getTieredCpsMultAddons.push('if(Game.elderWrath===3&&Game.Has(me.tieredUpgrades.misfortune.name)){mult*=1.06}');\n offlineCpsAddons.push(\"if(Game.Has('Misfortune #602')){percent+=1}\");\n kittenUpgradeAddons.push(\"if(Game.Has('Misfortune #603')){catMult*=1+Game.milkProgress*0.05*milkMult}\");\n\n // Inject code into vanilla fuctions\n Game.getNewTicker = new Function(\n  `return ${Game.getNewTicker\n   .toString()\n   .split('Game.TickerAge=Game.fps*10;')\n   .join(`${tickerAddons.join('\\n')}` + '\\n\\nGame.TickerAge=Game.fps*10;')}`,\n )();\n Game.modifyBuildingPrice = new Function(\n  `return ${Game.modifyBuildingPrice\n   .toString()\n   .split('return price')\n   .join(`${modifyBuildingPriceAddons.join('\\n')}` + '\\n\\nreturn price')}`,\n )();\n Game.Upgrade.prototype.getPrice = new Function(\n  `return ${Game.Upgrade.prototype.getPrice\n   .toString()\n   .split(/\\t{3}}/)\n   .join(`${upgradeGetPriceAddons.join('\\n')}` + '\\n}')}`,\n )();\n Game.GetTieredCpsMult = new Function(\n  `return ${Game.GetTieredCpsMult.toString()\n   .split('return mult')\n   .join(`${getTieredCpsMultAddons.join('\\n')}` + '\\n\\nreturn mult')}`,\n )();\n Game.LoadSave = new Function(\n  `return ${Game.LoadSave.toString()\n   .split('var percent=5;')\n   .join('var percent=5;\\n\\n' + `${offlineCpsAddons.join('\\n')}`)}`,\n )();\n Game.CalculateGains = new Function(\n  `return ${Game.CalculateGains.toString()\n   .split(\"Game.cookiesMultByType['kittens']=catMult;\")\n   .join(`${kittenUpgradeAddons.join('\\n')}` + \"\\n\\nGame.cookiesMultByType['kittens']=catMult;\")}`,\n )();\n};\n\nexport { misfortunePrice };\nexport default customMods;\n","import * as buildings from '@config';\nimport { TieredUpgrades, HeavenlyUpgrades } from 'customFuncs';\nimport { misfortunePrice } from '../customMods';\n\nconst aura = (): ICreateTieredUpgradeDTO[] => {\n const tier = 'aura';\n\n const upgrades: ICreateTieredUpgradeDTO[] = [\n  {\n   name: 'Aura furnace',\n   quote:\n    'Your grandmas have successfully mastered the art of baking, and are now able to use their aura to aid them in the process.',\n   building: buildings.grandma,\n   tier,\n  },\n  {\n   name: 'Aura seeds',\n   quote:\n    'Your farmers have successfully mastered the art of farming, and are now able to infuse their seeds with aura to make them grow faster.',\n   building: buildings.farm,\n   tier,\n  },\n  {\n   name: 'Aura pickaxe',\n   quote: 'Your miners are now able to infuse their pickaxes with aura, making them harder than ever!',\n   building: buildings.mine,\n   tier,\n  },\n  {\n   name: 'Aura cogs',\n   quote:\n    'These are the epitome of all cogs, created by bending a power called aura to your will and manipulating it to create cogs. They have the perfect amount of friction.',\n   building: buildings.factory,\n   tier,\n  },\n  {\n   name: 'Aura cash',\n   quote:\n    'Your bankers have developed a new technique of infusing a certain type of aura into cookies, making their currency even more reliable!',\n   building: buildings.bank,\n   tier,\n  },\n  {\n   name: 'Aura-filled temples',\n   quote:\n    'After many years of devoting themselves, the followers have started to awaken a power called aura. Praying while cultivating it pleases the gods even more.',\n   building: buildings.temple,\n   tier,\n  },\n  {\n   name: 'Aura spells',\n   quote: 'Using aura as an extra source source of mana, wizards can now summon twice as much cookies.',\n   building: buildings.wizardTower,\n   tier,\n  },\n  {\n   name: 'Aura fuel',\n   quote: 'Having no need for aura themselves, astronauts distilled it into their fuel, making it even more efficient.',\n   building: buildings.shipment,\n   tier,\n  },\n  {\n   name: 'Aura transmutation',\n   quote:\n    'Through your vast comprehension of the alchemical laws, you are now able to create cookies from your own qi.',\n   building: buildings.alchemyLab,\n   tier,\n  },\n  {\n   name: 'Aura portal',\n   quote: 'Through your comprehension of the Space Dao, you can now create portals using your qi.',\n   building: buildings.portal,\n   tier,\n  },\n  {\n   name: 'Aura travel',\n   quote: 'Through your comprehension of the Time Dao, you can now travel through time using your qi.',\n   building: buildings.timeMachine,\n   tier,\n  },\n  // Seriously?\n  {\n   name: 'Aura condensers',\n   building: buildings.antimatterCondenser,\n   tier,\n  },\n  {\n   name: 'Aura prism',\n   quote: \"Light is energy, isn't it? Now you're making cookies out of aura.\",\n   building: buildings.prism,\n   tier,\n  },\n  {\n   name: 'Aura dice',\n   quote: \"Yes, you've found a way to use your understanding of the world to affect your luck and get more cookies.\",\n   building: buildings.chancemaker,\n   tier,\n  },\n  // Seriously?\n  {\n   name: 'Aura fractals',\n   building: buildings.fractalEngine,\n   tier,\n  },\n  {\n   name: 'Aura hardware',\n   quote: \"It's an algorithm, I swear! It really doubles your cookie production. Don't ask how it works.\",\n   building: buildings.javascriptConsole,\n   tier,\n  },\n  {\n   name: 'Aura universe',\n   quote:\n    \"It is said that when one's understanding of the Martial Dao gets too profound, an ocean starts forming inside of his own body, eventually becoming a full-fledged world.\",\n   building: buildings.idleverse,\n   tier,\n  },\n ];\n\n return upgrades;\n};\n\nconst luminous = (): ICreateTieredUpgradeDTO[] => {\n const tier = 'luminous';\n\n const upgrades: ICreateTieredUpgradeDTO[] = [\n  {\n   name: 'Luminous grandmas',\n   quote: 'Your grandmas have called their long-lost relatives to help them bake more cookies.',\n   building: buildings.grandma,\n   tier,\n  },\n  {\n   name: 'Luminous seeds',\n   quote:\n    \"Through your advancements in the field of agriculture, you've discovered some sort of luminescent seed. It's still unclear whether it's safe or not, but it yields more crops than normal ones.\",\n   building: buildings.farm,\n   tier,\n  },\n  {\n   name: 'Luminous refining',\n   quote:\n    'By mixing the cookie dough you mine with a mysterious luminescent powder, you are able to make them yield more and become tastier.',\n   building: buildings.mine,\n   tier,\n  },\n  {\n   name: 'Luminous labor',\n   quote:\n    \"By doing some shenanigans to a strange luminous powder that was recently discovered, you managed to create an entirely new workforce. They're fast, efficient and don't need to rest!\",\n   building: buildings.factory,\n   tier,\n  },\n  {\n   name: 'Luminous cash',\n   quote:\n    \"You've created a new currency coated in a strange luminous powder. You don't really know what it is or where it came from, but gold is shiny, so it's obviously more valuable, right?\",\n   building: buildings.bank,\n   tier,\n  },\n  {\n   name: 'Luminous temples',\n   quote: 'This strange powder shines. You put it all around your temples. Gods like shiny things.',\n   building: buildings.temple,\n   tier,\n  },\n  {\n   name: 'Luminous catalyst',\n   quote:\n    'Wizards have discovered that by condensing mana, they are able to make a mysterious luminescent powder. This, in turn, is highly effective as a catalyst when using spells.',\n   building: buildings.wizardTower,\n   tier,\n  },\n  {\n   name: 'Luminous fuel',\n   quote:\n    'By mixing normal fuel and a solution of a mysterious luminous powder and alchohol, it becomes highly more potent.',\n   building: buildings.shipment,\n   tier,\n  },\n  {\n   name: 'Luminous transmutation',\n   quote: \"This mysterious luminous powder is very dense, so you're able transmute it into a lot more cookies.\",\n   building: buildings.alchemyLab,\n   tier,\n  },\n  {\n   name: 'Luminous portal',\n   quote: \"The portal to heaven will surely have a godly light, right? And it'll obviously be packed with cookies.\",\n   building: buildings.portal,\n   tier,\n  },\n  {\n   name: 'Luminous travel',\n   quote:\n    \"By using a strange luminous powder in your time machines, you can know where exactly you're going in spacetime more precisely. Yes, it works. Don't ask how.\",\n   building: buildings.timeMachine,\n   tier,\n  },\n  // Seriously?\n  {\n   name: 'Luminous condensers',\n   building: buildings.antimatterCondenser,\n   tier,\n  },\n  {\n   name: 'Luminous prism',\n   quote:\n    \"Well, you convert light into cookies. So if the prism is coated in luminous powder it'll obviously create more cookies.\",\n   building: buildings.prism,\n   tier,\n  },\n  {\n   name: 'Luminous dice',\n   quote: \"Now there are sparks whenever you spawn cookies. It's entertaining, so people do it more often.\",\n   building: buildings.chancemaker,\n   tier,\n  },\n  // Seriously?\n  {\n   name: 'Luminous fractals',\n   building: buildings.fractalEngine,\n   tier,\n  },\n  {\n   name: 'Luminous hardware',\n   quote: 'Hey, it works okay? RGB mice and keyboard boost computer performance.',\n   building: buildings.javascriptConsole,\n   tier,\n  },\n  {\n   name: 'Luminous universe',\n   quote:\n    'Brand new galaxies to explore, full with a strange luminous material everywhere... Regardless, that means tons of extra cookies to get!',\n   building: buildings.idleverse,\n   tier,\n  },\n ];\n\n return upgrades;\n};\n\nconst misfortune = (): ICreateTieredUpgradeDTO[] => {\n const tier = 'misfortune';\n const priceFunc: PriceFunc = upgrade => {\n  return Math.min(upgrade.basePrice, Game.unbuffedCps * 60 * 60 * 24);\n };\n const order = 19101;\n\n const upgrades: ICreateTieredUpgradeDTO[] = [\n  {\n   name: 'Misfortune #501',\n   quote: 'The decay of a finger will leave 4 others still pointing.',\n   building: buildings.cursor,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #502',\n   quote: 'A wrinkle is a crack on the only home you have.',\n   building: buildings.grandma,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #503',\n   // Kiz3r's\n   quote: 'Famine is inevitable.',\n   building: buildings.farm,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #504',\n   // Kiz3r's\n   quote: \"The collapse under your life's work.\",\n   building: buildings.mine,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #505',\n   quote: 'True worth is not in what you make yourself, but in what you make others do for you.',\n   building: buildings.factory,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #506',\n   quote: 'The value of money means everything to a banker.',\n   building: buildings.bank,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #507',\n   quote: 'No idol deserves worship.',\n   building: buildings.temple,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #508',\n   quote: 'Magic is about two things — deceiving and pleasing.',\n   building: buildings.wizardTower,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #509',\n   quote: 'Every mile travelled maddens you just as much',\n   building: buildings.shipment,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #510',\n   // Kiz3r's\n   quote: \"You're turning diamonds into coal.\",\n   building: buildings.alchemyLab,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #511',\n   // Kiz3r's\n   quote: 'Welcoming unwanted visitors.',\n   building: buildings.portal,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #512',\n   // Kiz3r's\n   quote: 'You cannot run from time.',\n   building: buildings.timeMachine,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #513',\n   quote: 'The world is made of what we take from it.',\n   building: buildings.antimatterCondenser,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #514',\n   quote: 'Staring at endless darkness can blind you forever from the light.',\n   building: buildings.prism,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #515',\n   // Kiz3r's\n   quote: \"Life's the gamble you will never win.\",\n   building: buildings.chancemaker,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #516',\n   // Kiz3r's\n   quote: 'Losing yourself by finding others.',\n   building: buildings.fractalEngine,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #517',\n   quote: \"If things are working in your computer, they won't in others'\",\n   building: buildings.javascriptConsole,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #518',\n   quote: 'There are too many of everyone, including you.',\n   building: buildings.idleverse,\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #600',\n   description: 'Upgrades and buildings cost <b>-1%</b>; you gain <b>+1%</b> CpS.',\n   quote: 'True poverty is counted in betrayals.',\n   price: misfortunePrice * 1e5,\n   priceFunc,\n   icon: [0, 0],\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #601',\n   description: 'You gain <b>+6%</b> CpS.',\n   quote: 'Some people dream of escaping misery; others dream of cookies.',\n   price: misfortunePrice * 1e8,\n   priceFunc,\n   icon: [0, 0],\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #602',\n   description:\n    'You gain <b>+1%</b> of your regular CpS while the game is closed <small>(provided you have the Twin Gates of Transcendence heavenly upgrade)</small>.',\n   // Kiz3r's\n   quote: \"Help, I'm trapped in a CC mod!\",\n   price: misfortunePrice * 1e11,\n   priceFunc,\n   icon: [0, 0],\n   tier,\n   order,\n  },\n  {\n   name: 'Misfortune #603',\n   description: 'You gain <b>more CpS</b> the more milk you have.',\n   quote: 'Believe the superstitions; black cats are bad luck.',\n   price: misfortunePrice * 1e14,\n   priceFunc,\n   icon: [1, 0],\n   tier,\n   kitten: true,\n   order,\n  },\n  {\n   name: 'Misfortune #604',\n   description: 'Clicking gains <b>+1% of your CpS</b>.',\n   // Think of something better\n   quote: 'Remember to not stay in touch.',\n   price: misfortunePrice * 1e11,\n   priceFunc,\n   icon: [2, 0],\n   tier,\n   order,\n  },\n  // {\n  //  name: 'Misfortune #666',\n  //  description: 'Grandmas are <b>twice</b> as efficient.',\n  //  // Kiz3r's\n  //  quote: 'Old but not wise.',\n  //  price: 6.666e51,\n  //  icon: [19, 2],\n  //  tier,\n  //  order,\n  // },\n ];\n\n return upgrades;\n};\n\nconst createHook = (): void => {\n TieredUpgrades([...aura(), ...luminous(), ...misfortune()]);\n HeavenlyUpgrades([\n  {\n   name: 'Misfortune cookies',\n   description: 'The news ticker may occasionally have <b>misfortunes</b>, which may be clicked for \"something\".',\n   quote: \"These taste quite bad — but then again, what's even the point?\",\n   price: 66666666666,\n   icon: [0, 1],\n   parents: ['Distilled essence of redoubled luck'],\n   position: [75, 495],\n   order: 644,\n  },\n ]);\n};\n\nexport default createHook;\n","import { buildingsList, modName, tierDescs, tierRows, upgradeIconsUrl } from '@config';\n\nconst TieredUpgrades = (data: ICreateTieredUpgradeDTO[]): void => {\n data.forEach(upgradeData => {\n  let desc: string;\n  let icon: Game.Icon;\n  let price: number;\n  const quote = upgradeData.quote ? `<q>${upgradeData.quote}</q>` : '';\n\n  upgradeData.description\n   ? (desc = upgradeData.description + quote)\n   : // @ts-ignore\n     (desc = upgradeData.building + (tierDescs[upgradeData.tier] || tierDescs.default) + quote);\n\n  upgradeData.icon\n   ? (icon = [upgradeData.icon[0], upgradeData.icon[1], upgradeIconsUrl])\n   : // @ts-ignore If this is ever reached, there will be a building in upgradeData\n     (icon = [buildingsList.indexOf(upgradeData.building) + 3, tierRows[upgradeData.tier], upgradeIconsUrl]);\n\n  upgradeData.price\n   ? (price = upgradeData.price)\n   : // @ts-ignore If this is ever reached, there will be a building in upgradeData\n     (price = Game.Objects[upgradeData.building].basePrice * Game.Tiers[upgradeData.tier].price);\n\n  const upgrade = new Game.Upgrade(upgradeData.name, desc, price, icon);\n  upgrade.mod = modName;\n\n  if (upgradeData.building) {\n   if (!upgradeData.order) {\n    upgradeData.building === 'Cursor'\n     ? (upgrade.order = 100)\n     : (upgrade.order = Math.floor(Game.Objects[upgradeData.building].tieredUpgrades[1].order) + 0.9999);\n   }\n\n   Game.SetTier(upgradeData.building, upgradeData.tier);\n  } else {\n   upgradeData.priceFunc && (upgrade.priceFunc = upgradeData.priceFunc);\n   upgrade.tier = upgradeData.tier;\n  }\n  upgradeData.order && (upgrade.order = upgradeData.order);\n\n  if (upgradeData.kitten) {\n   upgrade.kitten = 1;\n  }\n\n  Game.Tiers[upgradeData.tier].upgrades.push(upgrade);\n });\n};\n\nexport default TieredUpgrades;\n","import { modName, upgradeIconsUrl } from '@config';\n\nconst HeavenlyUpgrades = (data: ICreateHeavenlyUpgradeDTO[]): void => {\n data.forEach(upgradeData => {\n  const desc = `${upgradeData.description}${upgradeData.quote ? `<q>${upgradeData.quote}</q>` : ''}`;\n  const icon: Game.Icon = [upgradeData.icon[0], upgradeData.icon[1], upgradeIconsUrl];\n\n  const upgrade = new Game.Upgrade(upgradeData.name, desc, upgradeData.price, icon);\n  upgrade.mod = modName;\n  upgrade.pool = 'prestige';\n  upgrade.order = upgradeData.order;\n\n  upgradeData.parents.forEach(parent => {\n   upgrade.parents.push(Game.Upgrades[parent]);\n  });\n\n  [upgrade.posX, upgrade.posY] = upgradeData.position;\n\n  Game.PrestigeUpgrades.push(upgrade);\n });\n};\n\nexport default HeavenlyUpgrades;\n","import { modName } from './config';\nimport init from './init';\nimport save from './save';\nimport load from './load';\n\nconst CCIdeas: Game.Mod = {\n init,\n save,\n load,\n};\n\nGame.registerMod(modName, CCIdeas);\n","import checkHookContent from './checkHook';\nimport cookiesPerClickHookContent from './cookiesPerClickHook';\nimport cpsHookContent from './cpsHook';\nimport createHook from './createHook';\nimport customMods from './customMods';\n\nconst init = (): void => {\n customMods();\n Game.registerHook('check', checkHookContent);\n Game.registerHook('cookiesPerClick', cookiesPerClickHookContent);\n Game.registerHook('cps', cpsHookContent);\n createHook();\n};\n\nexport default init;\n","import { modName } from '@config';\n\nconst save = (): string => {\n const saveObj: ISave = {\n  boughtUpgrades: [],\n  unlockedUpgrades: [],\n };\n\n Game.UpgradesById.forEach(upgrade => {\n  if (upgrade.mod === modName) {\n   if (upgrade.bought) {\n    saveObj.boughtUpgrades.push(upgrade.name);\n   }\n\n   if (!upgrade.bought && upgrade.unlocked) {\n    saveObj.unlockedUpgrades.push(upgrade.name);\n   }\n  }\n });\n\n return JSON.stringify(saveObj);\n};\n\nexport default save;\n","const load = (saveString: string): void => {\n const save: ISave = JSON.parse(saveString);\n\n save.unlockedUpgrades.forEach(upgrade => {\n  Game.Unlock(upgrade);\n });\n save.boughtUpgrades.forEach(upgrade => {\n  Game.Upgrades[upgrade].bought = 1;\n });\n};\n\nexport default load;\n"],"sourceRoot":""}