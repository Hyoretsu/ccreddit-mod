{"version":3,"sources":["../src/main.ts"],"names":["Game","registerMod","init","registerHook","cps","state","save","JSON","stringify","load"],"mappings":"aAAAA,IAAI,CAACC,WAAL,CAAiB,cAAjB,CAAiC,CAEhCC,IAAI,CAAE,eAAM,CAEXF,IAAI,CAACG,YAAL,CAAkB,OAAlB,CAA2B,UAAM,CAAE,CAAnC,CAFW,CAIXH,IAAI,CAACG,YAAL,CAAkB,OAAlB,CAA2B,UAAM,CAAE,CAAnC,CAJW,CAMXH,IAAI,CAACG,YAAL,CAAkB,iBAAlB,CAAqC,UAAM,CAAE,CAA7C,CANW,CAQXH,IAAI,CAACG,YAAL,CAAkB,KAAlB,CAAyB,SAACC,CAAD,CAAiB,CACzC,MAAOA,CAAAA,CACP,CAFD,CARW,CAYXJ,IAAI,CAACG,YAAL,CAAkB,QAAlB,CAA4B,UAAM,CAAE,CAApC,CAZW,CAcXH,IAAI,CAACG,YAAL,CAAkB,MAAlB,CAA0B,UAAM,CAAE,CAAlC,CAdW,CAgBXH,IAAI,CAACG,YAAL,CAAkB,OAAlB,CAA2B,UAAM,CAAE,CAAnC,CAhBW,CAkBXH,IAAI,CAACG,YAAL,CAAkB,aAAlB,CAAiC,UAAM,CAAE,CAAzC,CAlBW,CAoBXH,IAAI,CAACG,YAAL,CAAkB,OAAlB,CAA2B,SAACE,CAAD,CAAoB,CAC1C,KAAAA,CAD0C,CAG1C,KAAAA,CAEJ,CALD,CApBW,CA2BXL,IAAI,CAACG,YAAL,CAAkB,QAAlB,CAA4B,UAAM,CACjC,MAAO,CAAC,EAAD,CACP,CAFD,CAGA,CAhC+B,CAkChCG,IAAI,CAAE,eAAM,CACX,MAAOC,CAAAA,IAAI,CAACC,SAAL,CAAe,EAAf,CACP,CApC+B,CAsChCC,IAAI,CAAE,eAAkB,CAAE,CAtCM,CAAjC,C","sourcesContent":["Game.registerMod('ccreddit_mod', {\n // Called as soon as the mod is registered, used to declare hooks\n init: () => {\n  // Called every few seconds to check for upgrade/achievement unlock conditions\n  Game.registerHook('check', () => {});\n  // Called when the big cookie is clicked\n  Game.registerHook('click', () => {});\n  // Called when determining the cookies per click\n  Game.registerHook('cookiesPerClick', () => {});\n  // Called when determining the CpS\n  Game.registerHook('cps', (cps: number) => {\n   return cps;\n  });\n  // Called after registering buildings/upgrades/achievements, use it to create custom content\n  Game.registerHook('create', () => {});\n  // Called every draw tick\n  Game.registerHook('draw', () => {});\n  // Called every logic tick\n  Game.registerHook('logic', () => {});\n  // Called when the player reincarnates after an ascension\n  Game.registerHook('reincarnate', () => {});\n  // Called whenever the player resets; parameter is true for hard reset and false for ascension\n  Game.registerHook('reset', (state: boolean) => {\n   if (state === false) {\n   }\n   if (state === true) {\n   }\n  });\n  // Called when determining news ticker text\n  Game.registerHook('ticker', () => {\n   return [''];\n  });\n },\n // Use this to store persistent data associated with your mod\n save: () => {\n  return JSON.stringify({});\n },\n // Do stuff with the string returned in save()\n load: (save: string) => {},\n});\n"],"file":"main.js"}